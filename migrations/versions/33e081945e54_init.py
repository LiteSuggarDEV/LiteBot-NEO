"""Init

迁移 ID: 33e081945e54
父迁移:
创建时间: 2025-06-27 06:32:40.937350

"""

from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

revision: str = "33e081945e54"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "group_config",
        sa.Column("group_id", sa.BigInteger(), nullable=False),
        sa.Column("switch", sa.Boolean(), nullable=False, default=True),
        sa.Column("welcome", sa.Boolean(), nullable=False, default=False),
        sa.Column("judge", sa.Boolean(), nullable=False, default=False),
        sa.Column("anti_recall", sa.Boolean(), nullable=False, default=False),
        sa.Column(
            "welcome_message", sa.Text(), nullable=False, default="欢迎加入群组！"
        ),
        sa.Column("nailong", sa.Boolean(), nullable=False, default=False),
        sa.Column(
            "anti_spam",
            sa.JSON(),
            nullable=False,
            default={"limit": 5, "interval": 5, "ban_time": 5, "enable": False},
        ),
        sa.Column("anti_link", sa.Boolean(), nullable=False, default=False),
        sa.Column("auto_manage_join", sa.Boolean(), nullable=False, default=False),
        sa.PrimaryKeyConstraint("group_id"),
        sa.Index("ix_group_config_group_id", "group_id"),
    )

    op.create_table(
        "group_blacklist",
        sa.Column("group_id", sa.String(50), nullable=False),
        sa.Column("reason", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("group_id"),
    )

    op.create_table(
        "private_blacklist",
        sa.Column("user_id", sa.String(50), nullable=False),
        sa.Column("reason", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("user_id"),
    )
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("private_blacklist")
    op.drop_table("group_blacklist")
    op.drop_table("group_config")
    # ### end Alembic commands ###
